# Bindings for swaywm, including modes
# Put all bindings here to keep consistent

## Set Super key
set $Super Mod4

# Mode to disable all keybindings (good for remote desktop, vm, or nested wayland compositor)
set $passthrough "󰌾 Keybindings Are Disabled"
mode $passthrough {
	bindsym Shift+Escape mode "default"
}
bindsym $Super+Shift+v mode $passthrough

### === System === ###
## These bindings are for system actions such as brightness and volume control, and for system utilities
## like an application launcher and terminal)

# Volume
set $WOBSOCK $XDG_RUNTIME_DIR/wob.sock
exec_always pkill wob; rm -f $WOBSOCK && mkfifo $WOBSOCK && tail -f $WOBSOCK | wob

bindsym XF86AudioRaiseVolume exec amixer sset Master 5%+ | \
	sed -En 's/.*\[([0-9]+)%\].*/\1/p' | head -1 > $WOBSOCK && \
	exec pkill -SIGRTMIN+10 i3blocks
bindsym XF86AudioLowerVolume exec amixer sset Master 5%- | \
	sed -En 's/.*\[([0-9]+)%\].*/\1/p' | head -1 > $WOBSOCK && \
	exec pkill -SIGRTMIN+10 i3blocks
bindsym XF86AudioMute exec amixer sset Master toggle | \
	sed -En '/\[on\]/ s/.*\[([0-9]+)%\].*/\1/ p; /\[off\]/ s/.*/0/p' | \
	head -1 > $WOBSOCK && exec pkill -SIGRTMIN+10 i3blocks
bindsym XF86AudioMicMute \
    exec wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle

# Media
bindsym XF86AudioPlay exec --no-startup-id playerctl play-pause
bindsym XF86AudioPause exec --no-startup-id playerctl play-pause
bindsym XF86AudioNext exec --no-startup-id playerctl next
bindsym XF86AudioPrev exec --no-startup-id playerctl previous

# Cmus window
bindsym $Super+Shift+m [app_id="foot" title="^Playing: .*"] scratchpad show

# Calculator
bindsym XF86Calculator exec footclient --app-id 'Clac' --title 'Calculator' clac

# Copy screenshot to clipboard
bindsym Print exec sh -c 'grim - | wl-copy' && notify-send " System" "<i>Image</i> sent to selection: <b>CLIPBOARD</b>"

# Copy selection to clipboard
bindsym Ctrl+Print exec sh -c 'grim -g "$(slurp)" - | wl-copy' && notify-send " System" "<i>Image</i> sent to selection: <b>CLIPBOARD</b>"

# Send selection to...
set $screenshot " Send Screenshot [w,u]"
set $screenshot_name "$(date +'Screenshot_%Y%m%d-%H%M%S.jpg')"
mode $screenshot {
    # Save clipboard to image-file (use in conjuction with screenshot mapping
    bindsym w exec sh -c 'wl-paste > ${HOME}/Pictures/Screenshots/$screenshot_name' && notify-send "System" "$screenshot_name saved"; mode "default"
    bindsym u exec sh -c 'wl-paste | ffsend upload --name $screenshot_name -' && notify-send "System" "Screenshot uploaded for sharing"; mode "default"
    # TODO: image sharing service (imgur?)
    bindsym Escape mode "default"
}
bindsym $Super+Shift+backslash mode $screenshot

# Notifications
bindsym $Super+d exec makoctl dismiss
bindsym $Super+Shift+d exec makoctl dismiss -a
bindsym $Super+Ctrl+i exec makoctl invoke; exec makoctl dismiss

# OCR Grab
bindsym $Super+y exec grim -g "$(slurp)" - | tesseract-ocr - - | wl-copy && notify-send " System" "Copied text to selection: <b>CLIPBOARD</b>"

# Color Picker
bindsym $Super+Shift+y exec pickcolor

# Password dmenu
bindsym $Super+p exec passmenu

# Yubikey 5 series oath menu
bindsym $Super+Shift+p exec yubikey-oathmenu

# Terminal
bindsym $Super+Return exec footclient

# Terminal (cwd)
bindsym $Super+Shift+Return exec footclient --working-directory="$(sway-cwd)"

# Copy cwd
bindsym $Super+Shift+u exec wl-copy "$(sway-cwd)" && notify-send "Clipboard" "Copied working directory to selection: <b>CLIPBOARD</b>"

# Application launcher
bindsym Alt+space exec fuzzel

# Run command (like dmenu_run)
bindsym Alt+Shift+space exec fuzzel_run

# Quick launch application
set $quick_launch "󰍉 Quick Launch [q,w,e,a,d]"
mode $quick_launch {
	bindsym q exec foot; mode "default"
	bindsym w exec firefox; mode "default"
	bindsym e exec godot; mode "default"
	bindsym a exec zathura; mode "default"
	bindsym d exec chiaki; mode "default"
	bindsym Escape mode "default"
}
bindsym $Super+semicolon mode $quick_launch

# Window switcher
bindsym $Super+g exec sway-window-picker -w 50

# Dmenu scratchpad menu
bindsym $Super+Shift+Tab exec sway-scratchpad

# Dmenu theme picker
bindsym Ctrl+Alt+t exec flavours-menu

# Notetaker window
#bindsym $Super+n exec footclient --title 'notetaker_window' -e notetaker

# Vim window, copies saved file to clipboard
bindsym $Super+v exec vim-anywhere


### === Basic Sway binds === ###
## These bindings are mostly basic sway keybindings (ws change, focus change, etc)

### Reload config file
bindsym Ctrl+Alt+r reload

### Exit sway
bindsym Ctrl+Alt+Shift+BackSpace exit

### Lockscreen
bindsym Ctrl+Alt+l exec swaylock

### Power menu (displays in reverse order)
set $power_menu swaynag -m "󰐦 UP - $(uptime -p | sed -e 's/up //g')"  \
	-z '󰿅 Logout' 'sway exit' \
	-z '󰤄 Suspend' 'sudo zzz' \
	-z '󰍁 Lock' 'swaylock' \
	-z '󰜉 Reboot' 'sudo reboot' \
	-z '󰐥 Shutdown' 'sudo poweroff'
bindsym $Super+x exec $power_menu

### kill focused container
bindsym $Super+c kill

### fullscreen mode
bindsym $Super+f fullscreen toggle

### container layouts (stacked, tabbed, split, floating, sticky)
bindsym $Super+w layout tabbed
bindsym $Super+Shift+w layout stacking
bindsym $Super+e layout toggle split
bindsym $Super+Shift+s floating toggle
bindsym $Super+o sticky toggle

### Floating modifier
floating_modifier $Super

### Focus container (h,j,k,l)
bindsym $Super+h focus left
bindsym $Super+j focus down
bindsym $Super+k focus up
bindsym $Super+l focus right

### Focus previously focused workspace
bindsym $Super+Tab workspace back_and_forth

### Focus between tiling/floating
bindsym $Super+s focus mode_toggle

### Focus parent/child/sibling
bindsym $Super+a focus parent
bindsym $Super+Shift+a focus child
bindsym $Super+space focus next sibling
bindsym $Super+Shift+space focus prev sibling

### Move focused window
bindsym $Super+Shift+h move left
bindsym $Super+Shift+j move down
bindsym $Super+Shift+k move up
bindsym $Super+Shift+l move right

### Swap focused window
set $swap "󰓡 Swap Containers"
mode $swap {
	# Focus container (h,j,k,l)
	bindsym $Super+h focus left
	bindsym $Super+j focus down
	bindsym $Super+k focus up
	bindsym $Super+l focus right

	# Focus parent/child
	bindsym $Super+a focus parent
	bindsym $Super+Shift+a focus child

	# Confirm
	bindsym $Super+Return swap container with mark "_swapee"; unmark "_swapee"; mode "default"
	bindsym Return swap container with mark "_swapee"; unmark "_swapee"; mode "default"

	# Cancel
	bindsym Escape unmark "_swapee"; mode "default"
}
bindsym $Super+Shift+i mark --add "_swapee"; mode $swap

### Snap focused floating window
bindsym $Super+Alt+h exec sway-snap left
bindsym $Super+Alt+j exec sway-snap down
bindsym $Super+Alt+k exec sway-snap up
bindsym $Super+Alt+l exec sway-snap right
bindsym $Super+Alt+space move absolute position center

### Resize
set $distanceStr 15 px or 15 ppt
bindsym $Super+Ctrl+h resize grow left $distanceStr
bindsym $Super+Ctrl+j resize grow down $distanceStr
bindsym $Super+Ctrl+k resize grow up $distanceStr
bindsym $Super+Ctrl+l resize grow right $distanceStr

bindsym $Super+Ctrl+Shift+h resize shrink left $distanceStr
bindsym $Super+Ctrl+Shift+j resize shrink down $distanceStr
bindsym $Super+Ctrl+Shift+k resize shrink up $distanceStr
bindsym $Super+Ctrl+Shift+l resize shrink right $distanceStr

### Alt resize
set $altDistanceStr 60 px or 60 ppt
bindsym $Super+Ctrl+Alt+h resize shrink width $altDistanceStr
bindsym $Super+Ctrl+Alt+j resize grow height $altDistanceStr
bindsym $Super+Ctrl+Alt+k resize shrink height $altDistanceStr
bindsym $Super+Ctrl+Alt+l resize grow width $altDistanceStr

### Preset sizes for floating windows
bindsym $Super+Shift+F11 $video
bindsym $Super+Shift+F12 $dropdown

### Swap currently focused container with the largest container in the tree
bindsym $Super+i exec sway-swap-largest

### Change split direction
bindsym $Super+equal split horizontal
bindsym $Super+minus split vertical

# Change workroom
bindsym Ctrl+$Super+1 set $$workroom 1
bindsym Ctrl+$Super+2 set $$workroom 2
bindsym Ctrl+$Super+3 set $$workroom 3
bindsym Ctrl+$Super+4 set $$workroom 4
bindsym Ctrl+$Super+5 set $$workroom 5

### Focus workspace in workroom (prepend ws numbers to keep order consistent, ws_x is global, not part of list)
bindsym Ctrl+$Super+q workspace "1:$$workroom$ws_q"
bindsym Ctrl+$Super+w workspace "2:$$workroom$ws_w"
bindsym Ctrl+$Super+e workspace "3:$$workroom$ws_e"
bindsym Ctrl+$Super+a workspace "4:$$workroom$ws_a"
bindsym Ctrl+$Super+s workspace "5:$$workroom$ws_s"
bindsym Ctrl+$Super+d workspace "6:$$workroom$ws_d"
bindsym Ctrl+$Super+x workspace "7:$ws_x"

### Move container to workspace
bindsym Ctrl+$Super+Shift+q move container to workspace "1:$$workroom$ws_q"
bindsym Ctrl+$Super+Shift+w move container to workspace "2:$$workroom$ws_w"
bindsym Ctrl+$Super+Shift+e move container to workspace "3:$$workroom$ws_e"
bindsym Ctrl+$Super+Shift+a move container to workspace "4:$$workroom$ws_a
bindsym Ctrl+$Super+Shift+s move container to workspace "5:$$workroom$ws_s"
bindsym Ctrl+$Super+Shift+d move container to workspace "6:$$workroom$ws_d"
bindsym Ctrl+$Super+Shift+x move container to workspace "7:$ws_x"

### Move container to the scratchpad
bindsym $Super+Shift+z move scratchpad

### Show the scratchpad, excluding dropdown terminal (see config.d/startup)
#bindsym $Super+z [title="[^dropdown]"] scratchpad show
bindsym $Super+z scratchpad show
### Show dropdown
bindsym F12 [con_mark="^dropdown$"] scratchpad show
